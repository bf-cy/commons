/*****************************************************************************************************************************************************
 * 
 * @author lzy 2019年9月5日 上午10:06:21
 *****************************************************************************************************************************************************/
package lzy.commons.emuns;

import org.apache.commons.lang3.StringUtils;

/*****************************************************************************************************************************************************
 * 
 * @author lzy 2019年9月5日 上午10:06:21
 *****************************************************************************************************************************************************/
public enum DataBase {

	
	MySqL("`","MySql","MySql",0),
	Oracle("\"","Oracle","Oracle",0),
	SqlServer("\"","SqlServer","SqlServer",0);
	

	private DataBase(String keywordProcessing,String name,String desc,int type) {
		this.keywordProcessing = keywordProcessing;
		this.name = name;
		this.desc = desc;
		this.type = type;
	}
	
	private String keywordProcessing;
	private String name;
	private String desc;
	private int type;
	
	public String getName() {
		return name;
	}

	public String getDesc() {
		return desc;
	}
	/*****************************************************************************************************************************************************
	 * 关键字处理字符
	 * 数据库中特殊关键字做为自定义表名、列明等名称时，直接写会报语法错误，这时需要使用特殊处理字符将其包裹处理。例如：mysql 关键字特殊处理字符时“·”，oracle使用的时“"”--英文双引号
	 * @return 关键字处理字符
	 * @author lzy 2019年9月5日 上午10:18:37
	 *****************************************************************************************************************************************************/
	public String getKeywordProcessing() {
		return keywordProcessing;
	}

	/*****************************************************************************************************************************************************
	 * 数据库类型
	 * @return 0:关系型数据库；1：非关系行数据库
	 * @author lzy 2019年9月5日 上午10:19:51
	 *****************************************************************************************************************************************************/
	public int getType() {
		return type;
	}
	/*****************************************************************************************************************************************************
	 * 根据 数据库名称  获取数据库信息
	 * @param name  数据库名称
	 * @return 数据库信息
	 * @author lzy 2019年9月5日 上午10:14:35
	 *****************************************************************************************************************************************************/
	public static DataBase getName(String name) {
		if(StringUtils.isBlank(name)) {
			return null;
		}
		
		for (DataBase dataBase : values()) {
			if(dataBase.getName().toUpperCase().equals(name.toUpperCase())) {
				return dataBase;
			}
		}
		return null;
	}

}
